---
- name: "Create a host"
  hosts: all
  connection: local
  collections:
   - redhat.satellite
  tasks:
  # when rhv is compute resource
  - name: "Create and power up RHV Guest"
    block:
      # gets the next available IP from netbox
      - name: "Get next available IP in block"
        netbox_ip_address:
          netbox_url: http://netbox.example.com
          netbox_token: my_netbox_token
          data:
            prefix: "{{ subnet }}"
            description: "{{ requested_server_name }}"
          state: new
        register: netbox_data
      
      - name: "Create RHV Guest"
        host:
          username: "{{ satellite_user }}"
          password: "{{ satellite_pw }}"
          server_url: "https://satellite.example.com"
          name: "{{ requested_server_name }}"
          compute_resource: "{{ compute_resource }}"
          architecture: "x86_64"
          build: true
          domain: "{{ domain }}"
          compute_profile: "{{ instance_type }}"
          organization: "{{ satellite_org }}"
          location: "{{ satellite_location }}"
          mac: "{{ '56' | random_mac }}"
          ip: "{{ netbox_data.ip_address.address.split('/')[0] }}"
          root_pass: "{{ lookup('password', '/tmp/passwordfile chars=ascii_letters length=16') }}"
          subnet: "{{ subnet }}"
          provision_method: "build"
          lifecycle_environment: "{{ lifecycle_env }}"
          content_view: "{{ content_view }}"
          operatingsystem: "{{ system_os }}"
          ptable: "Kickstart default"
          content_source: "satellite.example.com"
          pxe_loader: "PXELinux BIOS"
          kickstart_repository: "{{ kickstart_repo }}"
          validate_certs: no
          parameters:
          - name: subscription_manager
            value: yes
          - name: subscription_manager_certpkg_url
            value: https://satellite.example.com/pub/katello-ca-consumer-latest.noarch.rpm
          - name: redhat_install_host_tools
            value: yes
          - name: redhat_install_agent
            value: yes
          - name: subscription_manager_org
            value: "{{ satellite_org }}"
          - name: activation_key
            value: "{{ activation_key }}"
          - name: foo
            value: yes
          state: present
  
      - name: "Pause for guest creation prior to start"
        pause:
          seconds: 30

      - name: "Start up guest"
        host_power:
          username: "{{ satellite_user }}"
          password: "{{ satellite_pw }}"
          server_url: "https://satellite.example.com"
          name: "{{ requested_server_name }}"
          state: on
          validate_certs: no

      - name: "Wait for SSH to start"
        wait_for:
          port: 22
          host: '{{ requested_server_name }}'
          delay: 60
          timeout: 30000
        connection: local

    when: compute_resource == "rhv.example.com"



  - name: Deploy EC2 Guest
    block:
        #when deploy a machine to EC2
    - name: "Create a host"
      host:
        username: "{{ satellite_user }}"
        password: "{{ satellite_pw }}"
        server_url: "https://satellite.example.com"
        name: "{{ requested_server_name }}"
        compute_resource: "{{ compute_resource }}"
        architecture: "x86_64"
        domain: "{{ domain }}"
        compute_profile: "{{ instance_type }}"
        organization: "{{ satellite_org }}"
        location: "{{ satellite_location }}"
        root_pass: "{{ lookup('password', '/tmp/passwordfile chars=ascii_letters length=16') }}"
        provision_method: "image"
        lifecycle_environment: "{{ lifecycle_env }}"
        content_view: "{{ content_view }}"
        operatingsystem: "{{ system_os }}"
        content_source: "satellite.example.com"
        kickstart_repository: "{{ kickstart_repo }}"
        parameters:
          - name: subscription_manager
            value: yes
          - name: subscription_manager_certpkg_url
            value: https://satellite.example.com/pub/katello-ca-consumer-latest.noarch.rpm
          - name: redhat_install_host_tools
            value: yes
          - name: redhat_install_agent
            value: yes
          - name: subscription_manager_org
            value: "{{ satellite_org }}"
          - name: activation_key
            value: "{{ activation_key }}"
          - name: http-proxy
            value: squid.example.com
          - name: http-proxy-port
            value: 3128
          - name: http-proxy-user 
            value: sat_squid_user
          - name: http-proxy-password
            value: OWRmNzE4N2RkYzdkYzkyZWE2NTc3YWRj
          - name: foo
            value: yes
        state: present
      async: 1800
      poll: 0
      register: host_create
    
    - name: "check deployment status"
      async_status:
        jid: "{{ host_create.ansible_job_id }}"
      register: job_status
      until: job_status.finished
      retries: 10000
    when: "'aws' in compute_resource"


